<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<data version="1.38.0">
  <trigger type="http_request">
    <useDefaultName>true</useDefaultName>
    <name>HTTP Request: /*, port 1122</name>
    <enabled>true</enabled>
    <path>/*</path>
    <port>1122</port>
    <bindToWifiOnly>false</bindToWifiOnly>
    <acquireWifiLock>true</acquireWifiLock>
    <finishResponse>false</finishResponse>
  </trigger>
  <condition type="debug_dialog">
    <useDefaultName>false</useDefaultName>
    <name> Debug Dialog</name>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: method == "GET"</name>
    <expression>method == "GET"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: method == "POST"</name>
    <expression>method == "POST"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: param_class != null</name>
    <expression>param_class != null</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: param_long == "1"</name>
    <expression>param_long == "1"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: param_package != null</name>
    <expression>param_package != null</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: param_password == global_api_password</name>
    <expression>param_password == global_api_password</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "clipboard"</name>
    <expression>path[0] == "clipboard"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "debug"</name>
    <expression>path[0] == "debug"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "notification"</name>
    <expression>path[0] == "notification"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "screen"</name>
    <expression>path[0] == "screen"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "shutdown"</name>
    <expression>path[0] == "shutdown"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "toast"</name>
    <expression>path[0] == "toast"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[0] == "url"</name>
    <expression>path[0] == "url"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "create"</name>
    <expression>path[1] == "create"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "lock"</name>
    <expression>path[1] == "lock"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "on"</name>
    <expression>path[1] == "on"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "open"</name>
    <expression>path[1] == "open"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "record"</name>
    <expression>path[1] == "record"</expression>
  </condition>
  <condition type="expression">
    <useDefaultName>true</useDefaultName>
    <name>Expression: path[1] == "unlock"</name>
    <expression>path[1] == "unlock"</expression>
  </condition>
  <action type="control_user_interface">
    <useDefaultName>true</useDefaultName>
    <name>Control UI: sleep(1000); click("START NOW")</name>
    <script>sleep(1000);
click("START NOW")</script>
  </action>
  <action type="copy_text_from_clipboard">
    <useDefaultName>true</useDefaultName>
    <name>Copy Text From Clipboard: to variable clip_data</name>
    <variable>clip_data</variable>
  </action>
  <action type="copy_text_to_clipboard">
    <useDefaultName>true</useDefaultName>
    <name>Copy Text to Clipboard: {http_params["text"]}</name>
    <text>{http_params["text"]}</text>
  </action>
  <action type="http_request">
    <useDefaultName>true</useDefaultName>
    <name>HTTP Request: POST {param_send_to_url} application/octet-stream  store in response</name>
    <url>{param_send_to_url}</url>
    <verifyCertificates>false</verifyCertificates>
    <basicAuthentication>false</basicAuthentication>
    <username></username>
    <clientCert>false</clientCert>
    <clientCertPath></clientCertPath>
    <httpMethod>POST</httpMethod>
    <networkType>DEFAULT</networkType>
    <httpContentType>BINARY_UNENCODED</httpContentType>
    <contentType>text/plain</contentType>
    <generalTextData></generalTextData>
    <formFieldList>Lastname=XYZ,Firstname=ABC</formFieldList>
    <uploadFieldName>upload_field</uploadFieldName>
    <uploadFilePath></uploadFilePath>
    <binaryContentType>application/octet-stream</binaryContentType>
    <binaryFilePath>{param_file}</binaryFilePath>
    <timeout>86400000</timeout>
    <setCustomHTTPHeaders>false</setCustomHTTPHeaders>
    <customHTTPHeaders></customHTTPHeaders>
    <storeInVariable>true</storeInVariable>
    <variable>response</variable>
    <encoding></encoding>
    <path>/storage/emulated/0/Download/file.bin</path>
    <followRedirects>true</followRedirects>
    <skipConnectivityCheck>false</skipConnectivityCheck>
  </action>
  <action type="lock_device">
    <useDefaultName>true</useDefaultName>
    <name>Lock Device</name>
  </action>
  <action type="notification_screen">
    <useDefaultName>true</useDefaultName>
    <name>Notification on Screen: {param_msg}</name>
    <showText>true</showText>
    <text>{param_msg}</text>
    <widgetName></widgetName>
    <width></width>
    <height></height>
    <stretchToFillArea>false</stretchToFillArea>
    <opacity>1.00</opacity>
    <durationLong>false</durationLong>
    <customPosition>false</customPosition>
    <gravityType>TOP_LEFT</gravityType>
    <xOffset>0</xOffset>
    <yOffset>0</yOffset>
  </action>
  <action type="notification_screen">
    <useDefaultName>true</useDefaultName>
    <name>Notification on Screen: {param_msg} (long)</name>
    <showText>true</showText>
    <text>{param_msg}</text>
    <widgetName></widgetName>
    <width></width>
    <height></height>
    <stretchToFillArea>false</stretchToFillArea>
    <opacity>1.00</opacity>
    <durationLong>true</durationLong>
    <customPosition>false</customPosition>
    <gravityType>TOP_LEFT</gravityType>
    <xOffset>0</xOffset>
    <yOffset>0</yOffset>
  </action>
  <action type="notification_status_bar">
    <useDefaultName>true</useDefaultName>
    <name>Notification on Statusbar: {param_title} Notification</name>
    <notificationIconType>BUILTIN</notificationIconType>
    <notificationIcon>NOTIFICATION</notificationIcon>
    <customNotificationIcon></customNotificationIcon>
    <title>{param_title}</title>
    <message>{param_message}</message>
    <channel></channel>
    <sound>true</sound>
    <vibrate>true</vibrate>
    <flashLED>false</flashLED>
    <flashLEDColor>#ff00ff00</flashLEDColor>
    <flashLEDOn>500</flashLEDOn>
    <flashLEDOff>500</flashLEDOff>
    <flagLocalOnly>false</flagLocalOnly>
    <accentColorEnabled>false</accentColorEnabled>
    <accentColor>#ffff0000</accentColor>
    <flagOngoing>false</flagOngoing>
    <flagNoClear>false</flagNoClear>
    <notificationIDEnabled>false</notificationIDEnabled>
    <notificationID>1</notificationID>
    <category>DEFAULT</category>
    <priority>MAX</priority>
    <visibility>PRIVATE</visibility>
    <messageBigEnabled>true</messageBigEnabled>
    <messageBig>{param_bigmessage}</messageBig>
    <showProgressbar>false</showProgressbar>
    <progressbarIndeterminate>false</progressbarIndeterminate>
    <progressbarValue>0</progressbarValue>
    <progressbarMaximum>100</progressbarMaximum>
    <largeIconEnabled>false</largeIconEnabled>
    <largeIcon></largeIcon>
    <group></group>
    <isGroupSummary>false</isGroupSummary>
  </action>
  <action type="open_browser_url">
    <useDefaultName>true</useDefaultName>
    <name>Open URL in Browser: {param_url}</name>
    <url>{param_url}</url>
    <explicitComponent>false</explicitComponent>
    <packageName></packageName>
    <className></className>
    <appName></appName>
  </action>
  <action type="open_browser_url">
    <useDefaultName>true</useDefaultName>
    <name>Open URL in Browser: {param_url} (use {param_package})</name>
    <url>{param_url}</url>
    <explicitComponent>true</explicitComponent>
    <packageName>{param_package}</packageName>
    <className></className>
    <appName></appName>
  </action>
  <action type="open_browser_url">
    <useDefaultName>true</useDefaultName>
    <name>Open URL in Browser: {param_url} (use {param_package}/{param_class})</name>
    <url>{param_url}</url>
    <explicitComponent>true</explicitComponent>
    <packageName>{param_package}</packageName>
    <className>{param_class}</className>
    <appName></appName>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: path = removeElementValue(split(toLowerCase(request_path), "/"), "");</name>
    <script>path = removeElementValue(split(toLowerCase(request_path), "/"), "");</script>
  </action>
  <action type="script">
    <useDefaultName>true</useDefaultName>
    <name>Script: txt = '{ "result": "success", "data": "'+encodeURL(clip_data)+'" }'</name>
    <script>txt = '{ "result": "success", "data": "'+encodeURL(clip_data)+'" }'</script>
  </action>
  <action type="set_keyguard_state">
    <useDefaultName>true</useDefaultName>
    <name>Set Keyguard State: Off</name>
    <enable>false</enable>
  </action>
  <action type="shutdown">
    <useDefaultName>true</useDefaultName>
    <name>Shutdown</name>
  </action>
  <action type="sleep">
    <useDefaultName>true</useDefaultName>
    <name>Sleep: {convertNull("param_delay", 0)} (allow device sleep)</name>
    <duration>{convertNull("param_delay", 0)}</duration>
    <keepDeviceAwake>false</keepDeviceAwake>
    <allowWakeupFromDeviceIdle>false</allowWakeupFromDeviceIdle>
  </action>
  <action type="start_recording_screen">
    <useDefaultName>true</useDefaultName>
    <name>Start Recording Screen: {param_file}</name>
    <resolution>FULL</resolution>
    <bitRate>MBIT_20</bitRate>
    <path>{param_file}</path>
    <recordAudio>true</recordAudio>
    <showStopRecordingNotification>true</showStopRecordingNotification>
  </action>
  <action type="turn_screen_on">
    <useDefaultName>true</useDefaultName>
    <name>Turn Screen On: Bright for 999999m</name>
    <bright>true</bright>
    <duration>999999m</duration>
    <resetUserActivityTimer>true</resetUserActivityTimer>
  </action>
  <action type="write_http_response_text">
    <useDefaultName>true</useDefaultName>
    <name>Write HTTP Response Text: { "result": "not authorized" }</name>
    <text>{ "result": "not authorized" }</text>
    <replaceVariables>false</replaceVariables>
    <contentType>application/json</contentType>
    <customHTTPHeaders>Connection: close
Proxy-Authenticate: Query realm="Stop sniffing"</customHTTPHeaders>
    <finishResponse>true</finishResponse>
  </action>
  <action type="write_http_response_text">
    <useDefaultName>true</useDefaultName>
    <name>Write HTTP Response Text: { "result": "success" }</name>
    <text>{ "result": "success" }</text>
    <replaceVariables>false</replaceVariables>
    <contentType>application/json</contentType>
    <customHTTPHeaders></customHTTPHeaders>
    <finishResponse>false</finishResponse>
  </action>
  <action type="write_http_response_text">
    <useDefaultName>true</useDefaultName>
    <name>Write HTTP Response Text: {txt}</name>
    <text>{txt}</text>
    <replaceVariables>true</replaceVariables>
    <contentType>application/json</contentType>
    <customHTTPHeaders></customHTTPHeaders>
    <finishResponse>true</finishResponse>
  </action>
  <flow type="flow">
    <name>HTTP API</name>
    <group>Remote Commands</group>
    <enabled>true</enabled>
    <executionPolicy>PARALLEL</executionPolicy>
    <triggercontainer id="t1" x="104.999985" y="-87.5">
      <trigger>HTTP Request: /*, port 1122</trigger>
    </triggercontainer>
    <conditioncontainer id="t2" x="104.99999" y="227.4999">Expression: param_password == global_api_password</conditioncontainer>
    <conditioncontainer id="t3" x="209.99998" y="367.49994">Expression: path[0] == "notification"</conditioncontainer>
    <conditioncontainer id="t4" x="210.00002" y="507.5">Expression: path[1] == "create"</conditioncontainer>
    <conditioncontainer id="t5" x="385.00003" y="367.5">Expression: path[0] == "toast"</conditioncontainer>
    <conditioncontainer id="t6" x="560.00006" y="367.5">Expression: path[0] == "shutdown"</conditioncontainer>
    <conditioncontainer id="t7" x="735.00006" y="507.5">Expression: method == "GET"</conditioncontainer>
    <actioncontainer id="t8" x="-34.999996" y="367.49994">Write HTTP Response Text: { "result": "not authorized" }</actioncontainer>
    <actioncontainer id="t9" x="209.99992" y="647.5">Notification on Statusbar: {param_title} Notification</actioncontainer>
    <actioncontainer id="t10" x="315.0" y="822.5">Notification on Screen: {param_msg} (long)</actioncontainer>
    <actioncontainer id="t11" x="454.99988" y="822.49994">Notification on Screen: {param_msg}</actioncontainer>
    <actioncontainer id="t12" x="524.99994" y="1067.5">Write HTTP Response Text: { "result": "success" }</actioncontainer>
    <conditioncontainer id="t13" x="1085.0001" y="507.49976"> Debug Dialog</conditioncontainer>
    <actioncontainer id="t14" x="559.99994" y="647.5">Shutdown</actioncontainer>
    <actioncontainer id="t15" x="104.99997" y="52.500015">Script: path = removeElementValue(split(toLowerCase(request_path), "/"), "");</actioncontainer>
    <actioncontainer id="t16" x="735.0" y="647.5">Copy Text From Clipboard: to variable clip_data</actioncontainer>
    <actioncontainer id="t17" x="735.0" y="857.5">Write HTTP Response Text: {txt}</actioncontainer>
    <actioncontainer id="t18" x="735.0" y="752.5">Script: txt = '{ "result": "success", "data": "'+encodeURL(clip_data)+'" }'</actioncontainer>
    <actioncontainer id="t19" x="910.0" y="647.5">Copy Text to Clipboard: {http_params["text"]}</actioncontainer>
    <conditioncontainer id="t20" x="805.00006" y="367.5">Expression: path[0] == "clipboard"</conditioncontainer>
    <conditioncontainer id="t21" x="1085.0" y="367.49997">Expression: path[0] == "debug"</conditioncontainer>
    <conditioncontainer id="t22" x="384.99997" y="507.49988">Expression: path[1] == "create"</conditioncontainer>
    <actioncontainer id="t23" x="560.0001" y="507.50012">Sleep: {convertNull("param_delay", 0)} (allow device sleep)</actioncontainer>
    <conditioncontainer id="t24" x="384.99994" y="647.5">Expression: param_long == "1"</conditioncontainer>
    <conditioncontainer id="t25" x="1260.0" y="612.5">Expression: param_package != null</conditioncontainer>
    <conditioncontainer id="t26" x="1190.0" y="752.5">Expression: param_class != null</conditioncontainer>
    <actioncontainer id="t27" x="1120.0" y="857.5">Open URL in Browser: {param_url} (use {param_package}/{param_class})</actioncontainer>
    <actioncontainer id="t28" x="1330.0" y="752.5">Open URL in Browser: {param_url}</actioncontainer>
    <actioncontainer id="t29" x="1260.0" y="857.5">Open URL in Browser: {param_url} (use {param_package})</actioncontainer>
    <conditioncontainer id="t30" x="1260.0" y="367.5">Expression: path[0] == "url"</conditioncontainer>
    <conditioncontainer id="t31" x="1260.0" y="507.49988">Expression: path[1] == "open"</conditioncontainer>
    <conditioncontainer id="t32" x="1470.0" y="367.5">Expression: path[0] == "screen"</conditioncontainer>
    <actioncontainer id="t33" x="1470.0" y="647.5">Lock Device</actioncontainer>
    <conditioncontainer id="t34" x="1470.0" y="507.49997">Expression: path[1] == "lock"</conditioncontainer>
    <conditioncontainer id="t35" x="1610.0" y="507.49994">Expression: path[1] == "unlock"</conditioncontainer>
    <actioncontainer id="t36" x="1610.0" y="647.5">Set Keyguard State: Off</actioncontainer>
    <actioncontainer id="t37" x="1750.0" y="647.5">Turn Screen On: Bright for 999999m</actioncontainer>
    <conditioncontainer id="t38" x="1749.9999" y="507.50003">Expression: path[1] == "on"</conditioncontainer>
    <conditioncontainer id="t39" x="910.00006" y="507.5">Expression: method == "POST"</conditioncontainer>
    <conditioncontainer id="t40" x="1889.9999" y="507.5">Expression: path[1] == "record"</conditioncontainer>
    <actioncontainer id="t41" x="1889.9998" y="752.5">Control UI: sleep(1000); click("START NOW")</actioncontainer>
    <actioncontainer id="t42" x="1890.0" y="647.5">Start Recording Screen: {param_file}</actioncontainer>
    <actioncontainer id="t43" x="1890.0" y="962.5">HTTP Request: POST {param_send_to_url} application/octet-stream  store in response</actioncontainer>
    <connection from="t1" to="t15" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t2" to="t3" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t2" to="t8" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t3" to="t5" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t3" to="t4" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t4" to="t9" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t5" to="t22" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t5" to="t6" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t6" to="t23" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t6" to="t20" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t7" to="t39" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t7" to="t16" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t9" to="t12" type="NORMAL" sourcePosition="SOUTH" targetPosition="WEST" />
    <connection from="t10" to="t12" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t11" to="t12" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t13" to="t12" type="TRUE" sourcePosition="SOUTH" targetPosition="EAST" />
    <connection from="t13" to="t12" type="FALSE" sourcePosition="SOUTH" targetPosition="EAST" />
    <connection from="t14" to="t12" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t15" to="t2" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t16" to="t18" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t18" to="t17" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t19" to="t12" type="NORMAL" sourcePosition="SOUTH" targetPosition="EAST" />
    <connection from="t19" to="t13" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t20" to="t7" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t20" to="t21" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t21" to="t13" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t21" to="t30" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t22" to="t24" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t23" to="t14" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t24" to="t10" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t24" to="t11" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t25" to="t28" type="FALSE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t25" to="t26" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t26" to="t27" type="TRUE" sourcePosition="WEST" targetPosition="NORTH" />
    <connection from="t26" to="t29" type="FALSE" sourcePosition="EAST" targetPosition="NORTH" />
    <connection from="t30" to="t31" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t30" to="t32" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t31" to="t25" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t32" to="t34" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t34" to="t33" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t34" to="t35" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t35" to="t36" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t35" to="t38" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t38" to="t37" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t38" to="t40" type="FALSE" sourcePosition="EAST" targetPosition="WEST" />
    <connection from="t39" to="t19" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t40" to="t42" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t40" to="t41" type="TRUE" sourcePosition="SOUTH" targetPosition="NORTH" />
    <connection from="t42" to="t43" type="NORMAL" sourcePosition="SOUTH" targetPosition="NORTH" />
  </flow>
</data>