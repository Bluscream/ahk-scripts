; Generated by AutoGUI 2.6.2
#SingleInstance Force
#NoEnv
SetWorkingDir %A_ScriptDir%
SetBatchLines -1
#Include %A_ScriptDir%\AutoXYWH.ahk
#Include <bluscream>

global java_dirs := []
java_dirs.Push(new Directory("C:\Program Files\AdoptOpenJDK"))
java_dirs.Push(new Directory("C:\Program Files\Eclipse Adoptium"))
java_dirs.Push(new Directory("C:\Program Files\Eclipse Foundation"))
java_dirs.Push(new Directory("C:\Program Files\OpenJDK"))


gosub initUI

OnClipboardChange("ClipChanged")
Return

initUI:
    Gui +Resize +AlwaysOnTop +ToolWindow
    Gui Font, s12
    Gui Add, ListView, hWndhLVItems vLVItems gLVItems x8 y8 w602 h402 +LV0x4000, Version|Path
    DllCall("UxTheme.dll\SetWindowTheme", "Ptr", hTVItems, "WStr", "Explorer", "Ptr", 0)
    Gui Font
    Gui Show, w624 h424, Java Version Selector
    populateUI()
    return  

populateUI() {
    LV_Delete()
    for i, dir in java_dirs {
        if dir.exists() {
            for j, jdir in dir.getDirectories() {
                bin := jdir.combineFile("bin","java.exe")
                if (bin.exists()) {
                    FileGetVersion, bin_ver , % bin.path
                    LV_Add("",bin_ver, bin.path)
                } else {
                    scriptlog(bin.path)
                }
            }
        }
    }
    LV_ModifyCol()  ; Auto-size each column to fit its contents.
    LV_ModifyCol(1, "Text Center Sort")  ; For sorting purposes, indicate that column 2 is an integer.
}

gLVItems(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
}

LVItems(CtrlHwnd, GuiEvent, EventInfo, ErrLevel := "") {
    if (GuiEvent = "DoubleClick")
    {
        LV_GetText(RowText, A_EventInfo, 2)  ; Get the text from the row's first field.
        if (!A_Args[1]) {
            FileSelectFile, jar_path,,, Select Jar File, *.jar
            jar := new File(jar_path)
        } else {
            jar := new File(A_Args[1])
        }
        cmd := """" . RowText . """ -jar """ . jar.getTarget() . """"
        ; scriptlog(cmd)
        OutputDebug, % cmd
        Run % cmd,,Min
        ExitApp
    }
}

GuiSize(GuiHwnd, EventInfo, Width, Height) {
    If (A_EventInfo == 1) {
        Return
    }

    AutoXYWH("xywh*", hTVItems)
}

GuiContextMenu(GuiHwnd, CtrlHwnd, EventInfo, IsRightClick, X, Y) {

}

GuiDropFiles(GuiHwnd, FileArray, CtrlHwnd, X, Y) {

}

ClipChanged(Type) {

}

GuiEscape(GuiHwnd) {
    ExitApp
}

GuiClose(GuiHwnd) {
    ExitApp
}
